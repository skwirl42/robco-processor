.include "syscall.asm"

.byte			H				0x48					; 'H'
.byte			d				0x64					; 'd'
.byte			e				0x65					; 'e'
.byte			l				0x6C					; 'l'
.byte			o				0x6F					; 'o'
.byte			r				0x72					; 'r'
.byte			w				0x77					; 'w'
.byte			space			0x20					; ' '
.byte			exclamation		0x21					; '!'
.byte			cr				0x0D
.byte			lf				0x0A

start:
	syscall		CLEAR			; 0x7f 0x01 0x06
loop:
	pushi		H				; 0x00 0x48
	pushi		e				; 0x00 0x65
	pushi		l				; 0x00 0x6C
	pushi		l				; 0x00 0x6C
	pushi		o				; 0x00 0x6F
	pushi		space			; 0x00 0x20
	pushi		w				; 0x00 0x77
	pushi		o				; 0x00 0x6F
	pushi		r				; 0x00 0x72
	pushi		l				; 0x00 0x6C
	pushi		d				; 0x00 0x64
	pushi		exclamation		; 0x00 0x21
	pushi		cr				; 0x00 0x0D
	pushi		lf				; 0x00 0x0A		 - 28 bytes into loop
	pushiw		14				; 0x20 0x00 0x0E - 14 characters in the string
	syscall		PRINT			; 0x7f 0x01 0x02

	b			loop			; 0x60 0xFF	0xDE - 40 bytes backwards
